<Window x:Class="de.webducer.net.extensions.ReferencePrivateCopyCheck.Dialogs.Views.ReferenceList"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:conv="clr-namespace:de.webducer.net.extensions.ReferencePrivateCopyCheck.Dialogs.Converter"
        xmlns:vm="clr-namespace:de.webducer.net.extensions.ReferencePrivateCopyCheck.Dialogs.ViewModels"
        xmlns:dvm="clr-namespace:de.webducer.net.extensions.ReferencePrivateCopyCheck.Dialogs.Design"
        xmlns:resx="clr-namespace:de.webducer.net.extensions.ReferencePrivateCopyCheck.Resources"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance dvm:DesignTimeReferenceListViewModel, IsDesignTimeCreatable=True}"
        Title="{x:Static resx:UI.DialogTitle}" Height="550" Width="450" WindowStyle="ToolWindow">
    <Window.Resources>
        <!-- Converter -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <conv:ConflictColorConverter x:Key="ConflictColorConverter" />

        <!--<Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True" />
        </Style>-->
    </Window.Resources>
    <Grid Margin="7">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <CheckBox Grid.Row="0" IsThreeState="True" HorizontalAlignment="Left"
                  Content="{x:Static resx:UI.LocalCopyLabel}" Margin="0,0,0,5"
                  IsChecked="{Binding ShowLocalCopy}" />

        <CheckBox Grid.Row="0" IsThreeState="False" HorizontalAlignment="Right"
                  Content="{x:Static resx:UI.ShowConflictsLabel}" Margin="0,0,0,5"
                  IsChecked="{Binding ShowOnlyConflicts}" />

        <TreeView Grid.Row="1" Margin="0,0,0,5" ItemsSource="{Binding ProjectList}">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding FilteredReferenceList}">
                    <TextBlock Text="{Binding ProjectName}" />
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:ReferenceViewModel}">
                            <Border BorderThickness="0,0,0,2" BorderBrush="{Binding HasConflict, Converter={StaticResource ConflictColorConverter}}">
                                <StackPanel Orientation="Horizontal" Margin="0,2">
                                    <CheckBox IsThreeState="True" IsChecked="{Binding Template.HasLocalCopy}"
                                              IsEnabled="False" Content=" " />
                                    <CheckBox IsThreeState="False" IsChecked="{Binding IsLocalCopy}"
                                              Content="{Binding ReferenceName, Mode=OneWay}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <!-- Message -->
        <Label Grid.Row="2"
               Visibility="{Binding HasConflicts, Converter={StaticResource BooleanToVisibilityConverter}}"
               Foreground="Red" FontWeight="Bold" Content="{x:Static resx:UI.ConflictMessage}" />

        <!-- Buttons -->
        <Button Grid.Row="3"
                HorizontalAlignment="Left"
                Width="140"
                Command="{Binding SaveChangesCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <TextBlock TextWrapping="Wrap" Text="{x:Static resx:UI.ApplyChangesButton}"
                       TextAlignment="Center" />
        </Button>

        <Button Grid.Row="3"
                HorizontalAlignment="Center"
                Width="140"
                Command="{Binding ApplyReferenceCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <TextBlock TextWrapping="Wrap" Text="{x:Static resx:UI.RestoreReferenceButton}"
                       TextAlignment="Center" />
        </Button>

        <Button Grid.Row="3"
                HorizontalAlignment="Right"
                Width="140"
                Command="{Binding SaveReferenceCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
            <TextBlock TextWrapping="Wrap" Text="{x:Static resx:UI.SaveAsReferenceButton}"
                       TextAlignment="Center" />
        </Button>
    </Grid>
</Window>